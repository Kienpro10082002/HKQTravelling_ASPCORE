// <auto-generated />
using System;
using HKQTravelling.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HKQTravelling.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231107052040_updateTables")]
    partial class updateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HKQTravelling.Models.Bookings", b =>
                {
                    b.Property<long>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("BOOKING_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("BookingId"));

                    b.Property<DateTime?>("BookingDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BOOKING_DATE");

                    b.Property<int?>("NumAdults")
                        .HasColumnType("int")
                        .HasColumnName("NUM_ADULTS");

                    b.Property<int?>("NumKids")
                        .HasColumnType("int")
                        .HasColumnName("NUM_KIDS");

                    b.Property<int?>("NumToddlers")
                        .HasColumnType("int")
                        .HasColumnName("NUM_TODDLERS");

                    b.Property<double?>("PriceAdults")
                        .HasColumnType("float")
                        .HasColumnName("PRICE_ADULTS");

                    b.Property<double?>("PriceKids")
                        .HasColumnType("float")
                        .HasColumnName("PRICE_KIDS");

                    b.Property<double?>("PriceToddlers")
                        .HasColumnType("float")
                        .HasColumnName("PRICE_TODDLERS");

                    b.Property<long?>("TourId")
                        .HasColumnType("bigint")
                        .HasColumnName("TOUR_ID");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("USER_ID");

                    b.HasKey("BookingId");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("bookings");
                });

            modelBuilder.Entity("HKQTravelling.Models.Discounts", b =>
                {
                    b.Property<long>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("DIS_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DiscountId"));

                    b.Property<DateTime?>("DiscountDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("DIS_DATE");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("DIS_NAME");

                    b.Property<double?>("DiscountPercentage")
                        .HasColumnType("float")
                        .HasColumnName("DIS_PER");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.HasKey("DiscountId");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("HKQTravelling.Models.EndLocations", b =>
                {
                    b.Property<long>("EndLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("END_LOCATION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EndLocationId"));

                    b.Property<string>("EndLocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("END_LOCATION_NAME");

                    b.HasKey("EndLocationId");

                    b.HasIndex("EndLocationName")
                        .IsUnique();

                    b.ToTable("endLocations");
                });

            modelBuilder.Entity("HKQTravelling.Models.Payments", b =>
                {
                    b.Property<long>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("PAYMENT_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("PaymentId"));

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("AMOUNT");

                    b.Property<long?>("BookingId")
                        .HasColumnType("bigint")
                        .HasColumnName("BOOKING_ID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("PAYMENT_DATE");

                    b.Property<double?>("TotalPrices")
                        .HasColumnType("float")
                        .HasColumnName("TOTAL_PRICE");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("HKQTravelling.Models.Roles", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ROLE_NAME");

                    b.HasKey("RoleId");

                    b.HasIndex("RoleName")
                        .IsUnique();

                    b.ToTable("roles");
                });

            modelBuilder.Entity("HKQTravelling.Models.Rules", b =>
                {
                    b.Property<long>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("RULE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RuleId"));

                    b.Property<string>("CancelChange")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("CANCLE_CHANGE");

                    b.Property<string>("Note")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("NOTE");

                    b.Property<string>("PriceInclude")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("PRICE_INCLUDE");

                    b.Property<string>("PriceNotInclude")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("PRICE_NOT_INCLUDE");

                    b.Property<string>("Surcharge")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("SURCHARGE");

                    b.HasKey("RuleId");

                    b.ToTable("rules");
                });

            modelBuilder.Entity("HKQTravelling.Models.StartLocations", b =>
                {
                    b.Property<long>("StartLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("START_LOCATION_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("StartLocationId"));

                    b.Property<string>("StartLocationName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("START_LOCATION_NAME");

                    b.HasKey("StartLocationId");

                    b.HasIndex("StartLocationName")
                        .IsUnique();

                    b.ToTable("startLocations");
                });

            modelBuilder.Entity("HKQTravelling.Models.TourDays", b =>
                {
                    b.Property<long>("TourDayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TOUR_DAY_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TourDayId"));

                    b.Property<int?>("DayNumber")
                        .HasColumnType("int")
                        .HasColumnName("DAY_NUMBER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DESTINATION");

                    b.Property<DateTime?>("TimeSchedule")
                        .HasColumnType("datetime2")
                        .HasColumnName("TIME_SCHEDULE");

                    b.Property<long?>("TourId")
                        .HasColumnType("bigint")
                        .HasColumnName("TOUR_ID");

                    b.HasKey("TourDayId");

                    b.HasIndex("TourId");

                    b.ToTable("tourDays");
                });

            modelBuilder.Entity("HKQTravelling.Models.TourImages", b =>
                {
                    b.Property<long>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("IMAGE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ImageId"));

                    b.Property<int?>("DayNumber")
                        .HasColumnType("int")
                        .HasColumnName("DAY_NUMBER");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IMAGE_URL");

                    b.Property<long?>("TourId")
                        .HasColumnType("bigint")
                        .HasColumnName("TOUR_ID");

                    b.HasKey("ImageId");

                    b.HasIndex("TourId");

                    b.ToTable("tourImages");
                });

            modelBuilder.Entity("HKQTravelling.Models.Tours", b =>
                {
                    b.Property<long>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TOUR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TourId"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<long?>("DiscountId")
                        .HasColumnType("bigint")
                        .HasColumnName("DIS_ID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("END_DATE");

                    b.Property<long?>("EndLocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("END_LOCATION_ID");

                    b.Property<int?>("Price")
                        .HasColumnType("int")
                        .HasColumnName("PRICE");

                    b.Property<int?>("Remaining")
                        .HasColumnType("int")
                        .HasColumnName("REMAINING");

                    b.Property<long?>("RuleId")
                        .HasColumnType("bigint")
                        .HasColumnName("RULE_ID");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("START_DATE");

                    b.Property<long?>("StartLocationId")
                        .HasColumnType("bigint")
                        .HasColumnName("START_LOCATION_ID");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("TOUR_NAME");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("TourId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("EndLocationId");

                    b.HasIndex("RuleId");

                    b.HasIndex("StartLocationId");

                    b.ToTable("tours");
                });

            modelBuilder.Entity("HKQTravelling.Models.UserDetails", b =>
                {
                    b.Property<long>("UserDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("USER_DETAIL_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserDetailId"));

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("AGE");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("datetime2")
                        .HasColumnName("BIRTHDATE");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("EMAIL");

                    b.Property<int?>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("GENDER");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("IMAGE_URL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("NiNumber")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("NI_NUMBER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SURNAME");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("USER_ID");

                    b.HasKey("UserDetailId");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[EMAIL] IS NOT NULL");

                    b.HasIndex("NiNumber")
                        .IsUnique()
                        .HasFilter("[NI_NUMBER] IS NOT NULL");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("userDetails");
                });

            modelBuilder.Entity("HKQTravelling.Models.Users", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("USER_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("PASSWORD");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("ROLE_ID");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("USERNAME");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("HKQTravelling.Models.Bookings", b =>
                {
                    b.HasOne("HKQTravelling.Models.Tours", "tours")
                        .WithMany()
                        .HasForeignKey("TourId");

                    b.HasOne("HKQTravelling.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("tours");

                    b.Navigation("users");
                });

            modelBuilder.Entity("HKQTravelling.Models.Payments", b =>
                {
                    b.HasOne("HKQTravelling.Models.Bookings", "bookings")
                        .WithMany()
                        .HasForeignKey("BookingId");

                    b.Navigation("bookings");
                });

            modelBuilder.Entity("HKQTravelling.Models.TourDays", b =>
                {
                    b.HasOne("HKQTravelling.Models.Tours", "tours")
                        .WithMany()
                        .HasForeignKey("TourId");

                    b.Navigation("tours");
                });

            modelBuilder.Entity("HKQTravelling.Models.TourImages", b =>
                {
                    b.HasOne("HKQTravelling.Models.Tours", "tours")
                        .WithMany()
                        .HasForeignKey("TourId");

                    b.Navigation("tours");
                });

            modelBuilder.Entity("HKQTravelling.Models.Tours", b =>
                {
                    b.HasOne("HKQTravelling.Models.Discounts", "discounts")
                        .WithMany()
                        .HasForeignKey("DiscountId");

                    b.HasOne("HKQTravelling.Models.EndLocations", "endLocations")
                        .WithMany()
                        .HasForeignKey("EndLocationId");

                    b.HasOne("HKQTravelling.Models.Rules", "rules")
                        .WithMany()
                        .HasForeignKey("RuleId");

                    b.HasOne("HKQTravelling.Models.StartLocations", "startLocations")
                        .WithMany()
                        .HasForeignKey("StartLocationId");

                    b.Navigation("discounts");

                    b.Navigation("endLocations");

                    b.Navigation("rules");

                    b.Navigation("startLocations");
                });

            modelBuilder.Entity("HKQTravelling.Models.UserDetails", b =>
                {
                    b.HasOne("HKQTravelling.Models.Users", "users")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("users");
                });

            modelBuilder.Entity("HKQTravelling.Models.Users", b =>
                {
                    b.HasOne("HKQTravelling.Models.Roles", "roles")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("roles");
                });
#pragma warning restore 612, 618
        }
    }
}
